name: Tests
on:
  push:
    branches: [ main, development ]
  pull_request:
    branches: [ main, development ]
jobs:

  lint:
    timeout-minutes: 3
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 9
    - name: Use Node.js 20.10.0
      uses: actions/setup-node@v4
      with:
        node-version: 20.10.0
        cache: 'pnpm'
    - name: Install dependencies
      run: pnpm install
    - name: Lint tests
      run: pnpm run lint

  unit:
    needs: lint
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 9
    - name: Use Node.js 20.10.0
      uses: actions/setup-node@v4
      with:
        node-version: 20.10.0
        cache: 'pnpm'
    - name: Install dependencies
      run: pnpm install
    - name: Run unit tests
      run: pnpm run test

  e2e:
    needs: lint
    timeout-minutes: 10
    runs-on: ubuntu-latest
    if: github.event.pull_request.base.ref == 'main'
    steps:
    - uses: actions/checkout@v4
    - name: Install pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 9
    - name: Use Node.js 20.10.0
      uses: actions/setup-node@v4
      with:
        node-version: 20.10.0
        cache: 'pnpm'
    - name: Install dependencies
      run: pnpm install
    - name: Install Playwright Browsers
      run: pnpm exec playwright install --with-deps
    - name: Run Playwright tests
      run: pnpm exec playwright test
    - uses: actions/upload-artifact@v4
      if: ${{ !cancelled() }}
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30

  deploy:
    needs: [e2e, unit, lint]
    if: |
      always() &&
      needs.unit.result == 'success' &&
      needs.lint.result == 'success' &&
      (needs.e2e.result == 'success' || needs.e2e.result == 'skipped')
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write
    name: Deploy to Cloudflare Pages
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
      - name: Use Node.js 20.10.0
        uses: actions/setup-node@v4
        with:
          node-version: 20.10.0
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install
      - name: Build
        run: pnpm run build
      - name: Publish
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: portfolio
          directory: .svelte-kit/cloudflare
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
