name: Tests
on:
  push:
    branches: [ main, development ]
  pull_request:
    branches: [ main, development ]

  workflow_dispatch:
    # inputs:
    #   environment:
    #     description: "Choose an environment to deploy to: <dev|staging|prod>"
    #     required: true
    #     default: "dev"

jobs:

  # Linting and Unit Testing --------------------------
  # Only run during pushes (not pull-requests)
  lint_unit:
    timeout-minutes: 5
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
    - uses: actions/checkout@v4
    - name: Install pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 9
    - name: Use Node.js 20.10.0
      uses: actions/setup-node@v4
      with:
        node-version: 20.10.0
        cache: 'pnpm'
    - name: Install dependencies
      run: pnpm install
    - name: Run lint
      run: pnpm run lint
    - name: Run unit tests
      run: pnpm run test

  # End to End Testing --------------------------------
  # Only run during pull requests
  e2e:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'pull_request'
    # github.ref == 'refs/heads/master'
    steps:
    - uses: actions/checkout@v4
    - name: Install pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 9
    - name: Use Node.js 20.10.0
      uses: actions/setup-node@v4
      with:
        node-version: 20.10.0
        cache: 'pnpm'
    - name: Install dependencies
      run: pnpm install
    - name: Install Playwright Browsers
      run: pnpm exec playwright install --with-deps
    - name: Run Playwright tests
      run: pnpm exec playwright test
    - uses: actions/upload-artifact@v4
      if: ${{ !cancelled() }}
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30

  # Deploy --------------------------------------------
  # Run for every push, pull request, or event dispatch
  # https://github.com/cloudflare/wrangler-action
  deploy:
    needs: [e2e, lint_unit]
    if: |
      always() &&
      (needs.lint_unit.result == 'success' || needs.lint_unit.result == 'skipped') &&
      (needs.e2e.result == 'success' || needs.e2e.result == 'skipped')
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write
    name: Deploy to Cloudflare Pages
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
      - name: Use Node.js 20.10.0
        uses: actions/setup-node@v4
        with:
          node-version: 20.10.0
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install
      - name: Build
        run: pnpm run build
      - name: Deploy
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          packageManager: pnpm
          command: pages deploy .svelte-kit/cloudflare --project-name=portfolio
          # projectName: portfolio
          # directory: .svelte-kit/cloudflare
          # gitHubToken: ${{ secrets.GITHUB_TOKEN }}
      - name: print deployment-url
        env:
          DEPLOYMENT_URL: ${{ steps.deploy.outputs.deployment-url }}
        run: echo $DEPLOYMENT_URL
