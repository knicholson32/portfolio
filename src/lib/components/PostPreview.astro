---
import type { CollectionEntry } from "astro:content";
import FormattedDate from "@components/FormattedDate.astro";
import { Image } from "astro:assets";
import Tag from "@components/Tag.astro";

type Props = {
  minutesRead: string | undefined;
  post: CollectionEntry<"post">;
};

const { minutesRead, post } = Astro.props;
---

<div class="prose-a:no-underline prose-a:font-normal rounded-xl">
  <a href={`/post/${post.slug}/`} class="flex flex-col gap-0 justify-center">
    {/* <h3 class="text-3xl my-0">{post.data.title}</h3> */}
    <Image
      width={720}
      height={360}
      src={post.data.image.img}
      alt="Cover image"
      style={`aspect-ratio: ${2};`}
      class="object-cover rounded-lg m-0 mb-2"
    />
    <h1 class="mb-2 px-2 white text-left">{post.data.title}</h1>
    <div class="px-2 italic text-sm inline-flex gap-1 items-center overflow-x-hidden">
      <div class="inline-flex gap-1 items-center whitespace-nowrap">
        <FormattedDate class="" date={post.data.pubDate} />
        {minutesRead && (
          <span class="text-xs text-neutral-500">â€¢</span>
          <span class="text-xs text-neutral-500">{minutesRead}</span>
        )}
      </div>
    </div>
    <div class="flex flex-row gap-1 py-2 overflow-x-scroll">
      { post.data.tags && post.data.tags.map((d) => <Tag tag={d}/>) }
    </div>
    <div class="prose px-2 pb-2 dark:prose-invert">{post.data.description}</div>
  </a>
</div>
