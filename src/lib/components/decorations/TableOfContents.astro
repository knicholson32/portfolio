---
import type { MarkdownHeading } from "node_modules/astro/dist/@types/astro";
import TableOfContentsHeading from "./TableOfContentsHeading.astro";

type Props = {
  headings: MarkdownHeading[];
};

const { headings } = Astro.props;

type TOC = {
  depth: number;
  text: string;
  slug: string;
  subheadings: TOC[];
};

const buildToc = (headings: MarkdownHeading[]) => {
  const toc: TOC[] = [];
  const parentHeadings = new Map();
  headings.forEach((h) => {
    const heading = { ...h, subheadings: [] };
    parentHeadings.set(heading.depth, heading);
    // Change 2 to 1 if your markdown includes your <h1>
    if (heading.depth === 2) {
      toc.push(heading);
    } else {
      console.log(parentHeadings, heading.depth);
      parentHeadings.get(heading.depth - 1).subheadings.push(heading);
    }
  });
  return toc;
};

const contents = buildToc(headings);

console.log(contents);
---

<nav class="toc">
  <ul>
    {contents.map((heading) => <TableOfContentsHeading heading={heading} />)}
  </ul>
</nav>
