---
import type { CollectionEntry } from "astro:content";
import BaseHead from "@components/BaseHead.astro";
import BaseHTML from "@layouts/BaseHTML.astro";
import { Picture } from "astro:assets";
import FormattedDate from "@components/FormattedDate.astro";
import Tag from "@components/Tag.astro";
import ViewTransitionLimiter from "@components/svelte/ViewTransitionLimiter.svelte";

type Props = {
	minutesRead: string | undefined;
	slug: string,
	data: CollectionEntry<"post">["data"];
};

const {
	minutesRead,
	slug,
	data,
} = Astro.props;

const aspectRatio =
	data.image.aspect === undefined ? "" : `aspect-ratio: ${data.image.aspect};`;

---

<BaseHTML>
	<BaseHead slot="header" title={data.title} description={data.description} image={data.image.img.src} type="article"
	/>
	<article class="w-full max-w-2xl">
		<ViewTransitionLimiter client:idle slug={slug}>
			<Picture formats={["avif", "webp"]} width={1024} src={data.image.img} style={aspectRatio} class="object-cover z-10" loading={"eager"} alt="Cover image" 
			/>
		</ViewTransitionLimiter>
		<div class="">
			<div class="title">
				<h1 class="mb-2 text-xl xs:text-3xl sm:text-4xl">{data.title}</h1>
				<div class="flex flex-row items-center gap-1 whitespace-nowrap">
					<FormattedDate date={data.pubDate} />
					<div class="hidden sm:inline-flex gap-1 items-center">{
						data.pubDate && (
							<span>•</span>
							<div class="text-xs italic">
								Updated <FormattedDate date={data.pubDate} />
							</div>
						)
					}</div>
					{minutesRead !== undefined ? <span>•</span><span class="text-xs italic">{minutesRead}</span> : ""}
					<div class="flex-grow"></div>
					<div class="inline-flex gap-1 items-center overflow-x-scroll no-scrollbar">{ data.tags && data.tags.map((d) => <Tag tag={d}/>) }</div>
				</div>
				<hr class="py-0 mt-4 mb-2 border-neutral-200 dark:border-neutral-800" />
			</div>
			<slot />
		</div>
	</article>
</BaseHTML>
