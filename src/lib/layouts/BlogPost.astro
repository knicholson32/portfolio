---
import { getCollection, type CollectionEntry } from "astro:content";
import BaseHead from "@components/BaseHead.astro";
import BaseHTML from "@layouts/BaseHTML.astro";
import { Picture } from "astro:assets";
import FormattedDate from "@components/FormattedDate.astro";
import Tag from "@components/Tag.astro";
import ViewTransitionLimiter from "@components/svelte/ViewTransitionLimiter.svelte";
import { SITE_TITLE } from "@consts";
import { ChevronLeft, ChevronRight } from "lucide-astro";

type Props = {
	minutesRead: string | undefined;
	id: string,
	data: CollectionEntry<"post">["data"];
};

const {
	minutesRead,
	id,
	data,
} = Astro.props;

const aspectRatio =
	data.image.aspect === undefined ? "" : `aspect-ratio: ${data.image.aspect};`;

const allPosts = (await getCollection("post")).sort(
	(a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
);

const currentPostIndex = allPosts.findIndex((p) => p.id === id);

---

<BaseHTML includeFooter={false}>
	<BaseHead slot="header" title={data.title + ' | ' + SITE_TITLE} description={data.description} image={data.image.img.src} type="article"
	/>
	<article class="w-full max-w-2xl p-4 relative">
		<ViewTransitionLimiter client:idle id={id}>
			<Picture formats={["avif", "webp"]} width={1024} src={data.image.img} style={aspectRatio} class="object-cover z-10" loading={"eager"} alt="Cover image" 
			/>
		</ViewTransitionLimiter>
		<div class="">
			<div class="title">
				<h1 class="mb-2 text-xl xs:text-3xl sm:text-4xl">{data.title}</h1>
				<div class="flex flex-row items-center gap-1 whitespace-nowrap">
					<FormattedDate date={data.pubDate} />
					<div class="hidden sm:inline-flex gap-1 items-center">{
						data.pubDate && (
							<span>•</span>
							<div class="text-xs italic">
								Updated <FormattedDate date={data.pubDate} />
							</div>
						)
					}</div>
					{minutesRead !== undefined ? <span>•</span><span class="text-xs italic">{minutesRead}</span> : ""}
					<div class="flex-grow"></div>
					<div class="inline-flex gap-1 items-center overflow-x-scroll no-scrollbar">{ data.tags && data.tags.map((d) => <Tag tag={d}/>) }</div>
				</div>
				<hr class="py-0 mt-4 mb-2 border-neutral-200 dark:border-neutral-800" />
			</div>
			<slot />
		</div>
	</article>
	<div class="relative w-full px-3 pb-3 lg:px-0 lg:pb-0 lg:w-auto lg:fixed lg:bottom-3 lg:left-3 lg:right-3 flex flex-row justify-between">
		{currentPostIndex !== 0 ?
			<a href={`/post/${allPosts[currentPostIndex - 1].id}`} class="inline-flex items-center gap-2 bg-neutral-800 rounded-lg pl-2 pr-4 py-2 no-underline text-current select-none group">
				<ChevronLeft class="w-4 h-4 group-hover:text-amber-500"/>
				Previous <span class="hidden sm:block lg:hidden xl:block">Post</span>
			</a>
			:
			<div></div>
		}
		{currentPostIndex < allPosts.length - 1 && 
			<a href={`/post/${allPosts[currentPostIndex + 1].id}`} class="inline-flex items-center gap-2 mx-3 bg-neutral-800 rounded-lg pr-2 pl-4 py-2 no-underline text-current select-none group">
				Next <span class="hidden sm:block lg:hidden xl:block">Post</span>
				<ChevronRight class="w-4 h-4 group-hover:text-amber-500"/>
			</a>
		}
	</div>
</BaseHTML>
