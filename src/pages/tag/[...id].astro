---
import { getCollection, render } from "astro:content";
import BaseHead from "@components/BaseHead.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "@consts";
import BaseHTML from "@layouts/BaseHTML.astro";
import PostGrid from "@components/PostGrid.astro";

export async function getStaticPaths() {
  const posts = await getCollection("post");

  const paths: string[] = [];

  for (const post of posts)
    if (post.data.tags !== undefined)
      for (const t of post.data.tags)
        if (!paths.includes(t.toLowerCase())) paths.push(t.toLowerCase());

  return paths.map((p) => ({ params: { id: p } }));
}

const id = Astro.params.id;

const postsUnfiltered = await getCollection("post");

const posts = postsUnfiltered.filter((p) => {
  console.log(p.data.tags);
  return (
    p.data.tags !== undefined &&
    p.data.tags.findIndex((t: string) => {
      return t.toLowerCase() === id.toLowerCase();
    }) !== -1
  );
});

const postsWithRenderProps = await Promise.all(
  posts.map(async (post) => {
    const { remarkPluginFrontmatter } = await render(post);
    return {
      post: post,
      minutesRead: remarkPluginFrontmatter.minutesRead as string | undefined,
    };
  }),
);
---

<BaseHTML>
  <BaseHead
    slot="header"
    title={id + " | " + SITE_TITLE}
    description={SITE_DESCRIPTION}
  />
  <div class="w-full font-mono px-4 pt-4">
    &gt; showing Posts with a tag of <code class="opacity-80 text-amber-500"
      >{id}</code
    >:
  </div>
  <hr
    class="py-0 mt-4 mb-2 w-full border-neutral-200 dark:border-neutral-800"
  />
  <PostGrid posts={postsWithRenderProps} />
</BaseHTML>

<!-- <BlogPost minutesRead={remarkPluginFrontmatter.minutesRead} data={post.data}>
  <div class="">
    <Content />
  </div>
</BlogPost> -->
